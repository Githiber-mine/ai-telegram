from telegram import Update
from telegram.ext import ContextTypes
from utils.logger import logger
from utils.history import chat_history, current_mode_per_chat, random_mode_per_chat
from utils.cleaner import clean_ai_reply
from core.ai import ask_openai
from config import MAX_HISTORY, BOT_USERNAME, ADMINS
import random

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –ò–ò-–±–æ—Ç. –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!")

async def terms_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùó –ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.")

async def secret_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–¢—ã –Ω–∞—à—ë–ª —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º!")

async def enable_random(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    random_mode_per_chat[chat_id] = True
    await update.message.reply_text("üé≤ –°–ª—É—á–∞–π–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã!")

async def disable_random(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    random_mode_per_chat[chat_id] = False
    await update.message.reply_text("üîï –°–ª—É—á–∞–π–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã!")

async def mode_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    chat_id = update.effective_chat.id
    user_id = update.effective_user.id

    if context.args:
        if user_id not in ADMINS:
            await message.reply_text("üö´ –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å —Ä–µ–∂–∏–º –æ–±—â–µ–Ω–∏—è.")
            return

        new_mode = context.args[0].lower()
        current_mode_per_chat[chat_id] = new_mode
        await message.reply_text(f"‚úÖ –†–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: *{new_mode}*", parse_mode="Markdown")
    else:
        current = current_mode_per_chat.get(chat_id, "default")
        await message.reply_text(f"üß† –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: *{current}*", parse_mode="Markdown")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    if not message or not message.text:
        return

    chat_id = update.effective_chat.id
    user = update.effective_user.username or update.effective_user.id
    text = message.text.strip()

    logger.info(f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{user}: {text}")

    mentioned = BOT_USERNAME.lower() in text.lower()
    is_reply = message.reply_to_message and message.reply_to_message.from_user and message.reply_to_message.from_user.id == context.bot.id
    random_enabled = random_mode_per_chat.get(chat_id, True)

    should_reply = mentioned or is_reply or (random_enabled and random.random() < 0.1)
    if not should_reply:
        return

    prompt = text.replace(BOT_USERNAME, "").strip()
    if not prompt:
        await message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å.")
        return

    chat_history.setdefault(chat_id, []).append({"role": "user", "content": prompt})
    chat_history[chat_id] = chat_history[chat_id][-MAX_HISTORY:]

    try:
        mode = current_mode_per_chat.get(chat_id, "default")
        logger.info(f"üß† –ê–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º: {mode}")
        reply = await ask_openai(chat_id, mode=mode)
        reply = clean_ai_reply(reply)

        if not reply or len(reply) > 1000:
            await message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞.")
            return

        chat_history[chat_id].append({"role": "assistant", "content": reply})
        chat_history[chat_id] = chat_history[chat_id][-MAX_HISTORY:]
        await message.reply_text(reply)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞: {e}")
        await message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò.")
